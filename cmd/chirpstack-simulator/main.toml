[general]
# Log level
#
# debug=5, info=4, warning=3, error=2, fatal=1, panic=0
log_level=4


# Application Server configuration.
[application_server]

  # API configuration.
  #
  # This configuration is used to automatically create the:
  #   * Device profile
  #   * Gateways
  #   * Application
  #   * Devices
  [application_server.api]

  # JWT token.
  #
  # The JWT token to connect to the ChirpStack Application Server API. This
  # token can be generated using the login API endpoint. In the near-future
  # it will be possible to generate these tokens within the web-interface:
  # https://github.com/brocaar/chirpstack-application-server/pull/421
  jwt_token="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhcyIsImV4cCI6MTYyMTAzNTgyOSwiaWQiOjEsImlzcyI6ImFzIiwibmJmIjoxNjIwOTQ5NDI5LCJzdWIiOiJ1c2VyIiwidXNlcm5hbWUiOiJhZG1pbiJ9.XESV6wKymPMC7gbsbS0GXJjj4fh2Htp8Aon29lLUy3I"

  # Server.
  #
  # This must point to the external API server of the ChirpStack Application
  # Server. When the server is running on the same machine, keep this to the
  # default value.
  server="127.0.0.1:8080"

  # Insecure.
  #
  # Set this to true when the endpoint is not using TLS.
  insecure=true


  # MQTT integration configuration.
  #
  # This integration is used for counting the number of uplinks that are
  # published by the ChirpStack Application Server integration.
  [application_server.integration.mqtt]

  # MQTT server.
  server="tcp://127.0.0.1:1883"

  # Username.
  username=""

  # Password.
  password=""


# Network Server configuration.
#
# This configuration is used to simulate LoRa gateways using the MQTT gateway
# backend.
[network_server]

  # MQTT gateway backend.
  [network_server.gateway.backend.mqtt]

  # MQTT server.
  server="tcp://127.0.0.1:1883"

  # Username.
  username=""

  # Password.
  password=""


# Simulator configuration.
#
# Example:
[[simulator]]
#
#   # Prefix for this simulation name (facultative)
prefix="simulation1_"
#
# # Service-profile ID.
# #
# # It is recommended to create a new organization with a new service-profile
# # in the ChirpStack Application Server.
service_profile_id="db070986-abbb-4ceb-9663-1e9991dd4f28"
#
# # Duration.
# #
# # This defines the duration of the simulation. If set to '0s', the simulation
# # will run until terminated. This includes the activation time.
duration="5m"
#
# # Activation time.
# #
# # This is the time that the simulator takes to activate the devices. This
# # value must be less than the simulator duration.
activation_time="5s"
#
#   # Device configuration.
[[simulator.device]]
#
#   # Prefix for each device name in this group (facultative)
   prefix="devicegroup1_"

#   # Number of devices to simulate in this group.
   count=2
#
#   # Uplink interval.
   uplink_interval="20s"
#
#   # FPort.
   f_port=10
#
#   # Payload (HEX encoded).
   payload="48656c6c6f20776f726c6421"
#
#   # Frequency (Hz).
   frequency=868100000
#
#   # Bandwidth (Hz).
   bandwidth=125000
#
#   # Spreading-factor.
   spreading_factor=7

   gateways = "5"

[[simulator.device]]
#
#   # Prefix for each device name in this group [facultative]
   prefix="devicegroup2_"

#   # Number of devices to simulate.
   count=1
#
#   # Uplink interval.
   uplink_interval="10s"
#
#   # FPort.
   f_port=10
#
#   # Payload (String) [used only if 'payload' value is empty or not set otherwise it is ignored]
   strpayload="Let it be"
#
#   # Frequency (Hz).
   frequency=868100000
#
#   # Bandwidth (Hz).
   bandwidth=125000
#
#   # Spreading-factor.
   spreading_factor=7

# Gateways connected to all devices of this group
   gateways = "1,5"
#
#   # Gateway configuration.
[[simulator.gateway]]
#
   group_id="1"

  # Prefix of the device name will be followed by UEID in Chirpstack Application Server
   prefix="gatewaygroup1_"

#   # Number of gateways to simulate.
   count=1

#   # Event topic template.
   event_topic_template="gateway/{{ .GatewayID }}/event/{{ .Event }}"
#
#   # Command topic template.
   command_topic_template="gateway/{{ .GatewayID }}/command/{{ .Command }}"


[[simulator.gateway]]
#
   group_id="5"

  # Prefix of the device name will be followed by UEID in Chirpstack Application Server
   prefix="gatewaygroup5_"

#   # Number of gateways to simulate.
   count=2

#   # Event topic template.
   event_topic_template="gateway/{{ .GatewayID }}/event/{{ .Event }}"
#
#   # Command topic template.
   command_topic_template="gateway/{{ .GatewayID }}/command/{{ .Command }}"
#
#   # Min number of receiving gateways.
#   min_count=1
#
#   # Max number of receiving gateways.
#   max_count=1


   

# Example:
[[simulator2]]
#
# # Application ID.
# #
# # Choose the application ID 
# # in the ChirpStack Application Server.
#application_id="56"

#   # Prefix for this simulation name
prefix="simulation2_"
#
# # Service-profile ID.
# #
# # It is recommended to create a new organization with a new service-profile
# # in the ChirpStack Application Server.
 service_profile_id="db070986-abbb-4ceb-9663-1e9991dd4f28"
#
# # Duration.
# #
# # This defines the duration of the simulation. If set to '0s', the simulation
# # will run until terminated. This includes the activation time.
duration="5m"
#
# # Activation time.
# #
# # This is the time that the simulator takes to activate the devices. This
# # value must be less than the simulator duration.
activation_time="5s"
#
#   # Device configuration.
[simulator2.device2]
#
#   # Number of devices to simulate.
   count=1
#
#   # Uplink interval.
   uplink_interval="1m"
#
#   # FPort.
   f_port=10
#
#   # Payload (HEX encoded).
   payload="4848484848"
#
#   # Frequency (Hz).
   frequency=868100000
#
#   # Bandwidth (Hz).
   bandwidth=500000
#
#   # Spreading-factor.
   spreading_factor=7
#
#   # Gateway configuration.
[simulator2.gateway2]
#
   count=1
#   # Event topic template.
   event_topic_template="gateway/{{ .GatewayID }}/event/{{ .Event }}"
#
#   # Command topic template.
   command_topic_template="gateway/{{ .GatewayID }}/command/{{ .Command }}"
#
#   # Min number of receiving gateways.
#   min_count=1
#
#   # Max number of receiving gateways.
#   max_count=1


# Prometheus metrics configuration.
#
# Using Prometheus (and Grafana), it is possible to visualize various
# simulation metrics like:
#   * Join-Requests sent
#   * Join-Accepts received
#   * Uplinks sent (by the devices)
#   * Uplinks sent (by the gateways)
#   * Uplinks sent (by the ChirpStack Application Server MQTT integration)
[prometheus]

# IP:port to bind the Prometheus endpoint to.
#
# Metrics can be retrieved from /metrics.
bind="0.0.0.0:9000"
